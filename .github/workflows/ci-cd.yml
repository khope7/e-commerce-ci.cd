name: React App CI/CD

on:
  push:
    branches:
      - master # Trigger the workflow on pushes to the main branch
  pull_request:
    branches:
      - master # Trigger on pull requests targeting the main branch

jobs:
  build: # Continuous integration
    runs-on: ubuntu-latest # This specifies the OS for the build environment

    env:
      VITE_APP_API_KEY: ${{ secrets.VITE_APP_API_KEY }}
      VITE_APP_AUTH_DOMAIN: ${{ secrets.VITE_APP_AUTH_DOMAIN }}
      VITE_APP_PROJECT_ID: ${{ secrets.VITE_APP_PROJECT_ID }}
      VITE_APP_STORAGE_BUCKET: ${{ secrets.VITE_APP_STORAGE_BUCKET }}
      VITE_APP_MESSAGING_SENDER_ID: ${{ secrets.VITE_APP_MESSAGING_SENDER_ID }}
      VITE_APP_APP_ID: ${{ secrets.VITE_APP_APP_ID }}

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # User your desired Node.js version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install --legacy-peer-deps

      # Step 4: Run tests (if you have tests set up)
      - name: Run tests
        run: npm test #Adjust this if you have specific test commands

      # Step 5: Build React app
      - name: Build React app
        run: npm run build:skip-ts # Assumes you have a buld script in package.json

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install --legacy-peer-deps

      # Step 4: Deploy to Vercel (or another platform)
      - name: Deploy to Vercel
        run: |
          npm install -g vercel
          vercel --prod --yes --token ${{ secrets.E_Commerce_CICD_Token }}
